#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec4 vertexPosition_modelspace;
layout(location = 1) in vec4 vertexColor;
layout(location = 2) in vec3 vertexNormal;	// TL

out vec4 vs_vertexColor;

// Values that stay constant for the whole mesh.
uniform float PickingColorArray[4];		// picking ID mark (one per vertex/point)
uniform mat4 M;
uniform mat4 V;
uniform mat4 P;
uniform int index;

void main(){
	// gl_PointSize = 10.0;

	vs_vertexColor = vec4(PickingColorArray[index], 0.0, 0.0, 1.0);	// set color based on the ID mark

	// Output position of the vertex, in clip space : MVP * position
	gl_Position = P * V * M * vertexPosition_modelspace;
}


